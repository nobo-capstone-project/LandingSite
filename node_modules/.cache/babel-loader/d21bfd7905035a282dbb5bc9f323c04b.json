{"ast":null,"code":"import _objectSpread from \"/Users/leocai/Study/INFO340/final-project/easy-parking-seattle/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/leocai/Study/INFO340/final-project/easy-parking-seattle/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/leocai/Study/INFO340/final-project/easy-parking-seattle/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/leocai/Study/INFO340/final-project/easy-parking-seattle/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/leocai/Study/INFO340/final-project/easy-parking-seattle/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/leocai/Study/INFO340/final-project/easy-parking-seattle/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/leocai/Study/INFO340/final-project/easy-parking-seattle/src/Maps.js\";\nimport React, { Component } from 'react';\nimport 'whatwg-fetch';\nimport ReactMapGL, { Marker, Popup, NavigationControl } from 'react-map-gl';\nimport 'mapbox-gl/dist/mapbox-gl.css';\nimport CusPin from './CusPin';\nimport PopupText from './PopupText';\nimport Geocoder from 'react-map-gl-geocoder';\nimport Auth from './Auth';\nimport firebase from 'firebase/app';\nimport 'firebase/database';\n\nvar Maps =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Maps, _Component);\n\n  function Maps(props) {\n    var _this;\n\n    _classCallCheck(this, Maps);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Maps).call(this, props)); // Set initial state\n\n    _this.mapRef = React.createRef();\n\n    _this.resize = function () {\n      _this.handleViewportChange({\n        width: \"90vw\",\n        height: \"100vh\"\n      });\n    };\n\n    _this.handleViewportChange = function (viewport) {\n      _this.setState({\n        viewport: _objectSpread({}, _this.state.viewport, viewport)\n      });\n    };\n\n    _this.getMarker = function (d, i) {\n      if (_this.state.result !== null) {\n        var distance = _this.calculateDistance(_this.state.result.center[1], _this.state.result.center[0], d.geometry.y, d.geometry.x);\n\n        if (distance <= 0.3) {\n          return React.createElement(Marker, {\n            key: \"marker-\".concat(i),\n            longitude: d.geometry.x,\n            latitude: d.geometry.y,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 113\n            },\n            __self: this\n          }, React.createElement(CusPin, {\n            size: 20,\n            onClick: function onClick() {\n              return _this.setState({\n                popupInfo: d\n              });\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 117\n            },\n            __self: this\n          }));\n        }\n      }\n    };\n\n    _this.state = {\n      viewport: {\n        width: \"90vw\",\n        height: \"100vh\",\n        latitude: 47.6062,\n        longitude: -122.3321,\n        zoom: 13\n      },\n      data: [],\n      result: null,\n      popupInfo: null,\n      user: null\n    };\n    return _this;\n  }\n\n  _createClass(Maps, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      window.addEventListener(\"resize\", this.resize);\n      this.resize();\n      firebase.auth().onAuthStateChanged(function (user) {\n        // If there is a user, set the state of `user`\n        if (user) {\n          _this2.setState({\n            user: user\n          });\n        } else {\n          _this2.setState({\n            user: null\n          });\n        }\n      }); // Load data\n\n      fetch('https://gisdata.seattle.gov/server/rest/services/SDOT/SDOT_ParkingData/MapServer/2/query?where=1%3D1&outFields=*&outSR=4326&f=json').then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        _this2.setState({\n          data: data.features\n        });\n      }).catch(function (error) {\n        console.error(error);\n      });\n    }\n  }, {\n    key: \"calculateDistance\",\n    value: function calculateDistance(lat1, lon1, lat2, lon2) {\n      var radlat1 = Math.PI * lat1 / 180;\n      var radlat2 = Math.PI * lat2 / 180;\n      var theta = lon1 - lon2;\n      var radtheta = Math.PI * theta / 180;\n      var dist = Math.sin(radlat1) * Math.sin(radlat2) + Math.cos(radlat1) * Math.cos(radlat2) * Math.cos(radtheta);\n\n      if (dist > 1) {\n        dist = 1;\n      }\n\n      dist = Math.acos(dist);\n      dist = dist * 180 / Math.PI;\n      dist = dist * 60 * 1.1515;\n      return dist;\n    }\n  }, {\n    key: \"getPopup\",\n    value: function getPopup() {\n      var _this3 = this;\n\n      if (this.state.popupInfo !== null) {\n        var key = 1;\n        return React.createElement(Popup, {\n          tipSize: 5,\n          anchor: \"top\",\n          longitude: this.state.popupInfo.geometry.x,\n          latitude: this.state.popupInfo.geometry.y,\n          closeOnClick: false,\n          onClose: function onClose() {\n            return _this3.setState({\n              popupInfo: null\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        }, React.createElement(PopupText, {\n          info: this.state.popupInfo,\n          user: this.state.user.displayName,\n          keyid: key = key + 1,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        }));\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(Auth, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }),\n      /* Only display the twitter content if there *is* a user */\n      this.state.user && React.createElement(\"div\", {\n        style: {\n          position: 'relative',\n          paddingTop: '50px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, \"Welcome, \", this.state.user.displayName, \"!\"), React.createElement(ReactMapGL, Object.assign({\n        ref: this.mapRef\n      }, this.state.viewport, {\n        style: {\n          margin: '2rem auto'\n        },\n        mapStyle: \"mapbox://styles/mapbox/streets-v10\",\n        onViewportChange: this.handleViewportChange,\n        mapboxApiAccessToken: 'pk.eyJ1IjoiZGVtaWdvZC10dSIsImEiOiJjam80dXplamwwM3ZyM3FuMG11aWJnbzl0In0.0U2ER5dreRX2sGB9VvMv7w',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }), React.createElement(Geocoder, {\n        mapRef: this.mapRef,\n        onViewportChange: this.handleViewportChange,\n        mapboxApiAccessToken: 'pk.eyJ1IjoiZGVtaWdvZC10dSIsImEiOiJjam80dXplamwwM3ZyM3FuMG11aWJnbzl0In0.0U2ER5dreRX2sGB9VvMv7w',\n        onResult: function onResult(result) {\n          _this4.setState({\n            result: result.result,\n            popupInfo: null\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }), this.state.data.map(this.getMarker), this.getPopup(), React.createElement(\"div\", {\n        className: \"navigation-control\",\n        style: {\n          position: 'absolute',\n          top: 0,\n          left: 0,\n          padding: '10px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, React.createElement(NavigationControl, {\n        onViewportChange: this.handleViewportChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return Maps;\n}(Component);\n\nexport default Maps;","map":{"version":3,"sources":["/Users/leocai/Study/INFO340/final-project/easy-parking-seattle/src/Maps.js"],"names":["React","Component","ReactMapGL","Marker","Popup","NavigationControl","CusPin","PopupText","Geocoder","Auth","firebase","Maps","props","mapRef","createRef","resize","handleViewportChange","width","height","viewport","setState","state","getMarker","d","i","result","distance","calculateDistance","center","geometry","y","x","popupInfo","latitude","longitude","zoom","data","user","window","addEventListener","auth","onAuthStateChanged","fetch","then","response","json","features","catch","error","console","lat1","lon1","lat2","lon2","radlat1","Math","PI","radlat2","theta","radtheta","dist","sin","cos","acos","key","displayName","position","paddingTop","margin","map","getPopup","top","left","padding"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport 'whatwg-fetch';\nimport ReactMapGL, { Marker, Popup, NavigationControl } from 'react-map-gl';\nimport 'mapbox-gl/dist/mapbox-gl.css';\nimport CusPin from './CusPin';\nimport PopupText from './PopupText';\nimport Geocoder from 'react-map-gl-geocoder';\nimport Auth from './Auth';\nimport firebase from 'firebase/app';\nimport 'firebase/database';\n\nclass Maps extends Component {\n    constructor(props) {\n        super(props);\n        \n        // Set initial state\n        this.state = {\n            viewport: {\n                width: \"90vw\",\n                height: \"100vh\",\n                latitude: 47.6062,\n                longitude: -122.3321,\n                zoom: 13\n            },\n            data: [],\n            result: null,\n            popupInfo: null,\n            user: null\n        };\n    }\n\n    mapRef = React.createRef();\n\n    resize = () => {\n        this.handleViewportChange({\n            width: \"90vw\",\n            height: \"100vh\"\n        });\n    };\n\n    handleViewportChange = viewport => {\n        this.setState({\n            viewport: { ...this.state.viewport, ...viewport }\n        });\n    };\n\n    componentDidMount() {\n        window.addEventListener(\"resize\", this.resize);\n        this.resize();\n\n        firebase.auth().onAuthStateChanged((user) => {\n            // If there is a user, set the state of `user`\n            if (user) {\n                this.setState({\n                    user: user\n                });\n            } else {\n                this.setState({ user: null });\n            }\n        });\n        \n        // Load data\n        fetch('https://gisdata.seattle.gov/server/rest/services/SDOT/SDOT_ParkingData/MapServer/2/query?where=1%3D1&outFields=*&outSR=4326&f=json')\n        .then(response => {\n            return response.json();\n        }).then(data => {\n            this.setState({\n                data: data.features\n            });\n        }).catch(error => {\n            console.error(error);\n        });\n\n\n    }\n\n    calculateDistance(lat1, lon1, lat2, lon2) {\n        let radlat1 = Math.PI * lat1 / 180;\n        let radlat2 = Math.PI * lat2 / 180;\n        let theta = lon1 - lon2;\n        let radtheta = Math.PI * theta / 180;\n        let dist = Math.sin(radlat1) * Math.sin(radlat2) + Math.cos(radlat1) * Math.cos(radlat2) * Math.cos(radtheta);\n        if (dist > 1) {\n            dist = 1;\n        }\n        dist = Math.acos(dist);\n        dist = dist * 180 / Math.PI;\n        dist = dist * 60 * 1.1515;\n        return dist;\n    }\n    \n    getPopup() {\n        if (this.state.popupInfo !== null) {\n            let key = 1;\n            return (\n                <Popup tipSize={5}\n                    anchor=\"top\"\n                    longitude={this.state.popupInfo.geometry.x}\n                    latitude={this.state.popupInfo.geometry.y}\n                    closeOnClick={false}\n                    onClose={() => this.setState({popupInfo: null})} >\n                    <PopupText info={this.state.popupInfo} user={this.state.user.displayName} keyid={key=key+1}/>\n                </Popup>\n            );\n        }\n    }\n\n    getMarker = (d, i)  => {\n        if (this.state.result !== null) {\n            let distance = this.calculateDistance(this.state.result.center[1], this.state.result.center[0], d.geometry.y, d.geometry.x);\n            if (distance <= 0.3) {\n                return (\n                    <Marker\n                        key={`marker-${i}`}\n                        longitude={d.geometry.x}\n                        latitude={d.geometry.y} >\n                        <CusPin size={20} onClick={() => this.setState({popupInfo: d})} />\n                    </Marker>\n                );\n            }\n        }\n    }\n\n    render() {\n        return(\n            <div>\n\n                <Auth />\n                {/* Only display the twitter content if there *is* a user */\n                    this.state.user &&\n                    <div style={{position: 'relative', paddingTop: '50px'}}>\n                        <div>Welcome, {this.state.user.displayName}!</div>\n                        <ReactMapGL\n                            ref={this.mapRef}\n                            {...this.state.viewport}\n                            style={{margin: '2rem auto'}}\n                            mapStyle=\"mapbox://styles/mapbox/streets-v10\"\n                            onViewportChange={this.handleViewportChange}\n                            mapboxApiAccessToken={'pk.eyJ1IjoiZGVtaWdvZC10dSIsImEiOiJjam80dXplamwwM3ZyM3FuMG11aWJnbzl0In0.0U2ER5dreRX2sGB9VvMv7w'}\n                        >\n                            <Geocoder\n                                mapRef={this.mapRef}\n                                onViewportChange={this.handleViewportChange}\n                                mapboxApiAccessToken={'pk.eyJ1IjoiZGVtaWdvZC10dSIsImEiOiJjam80dXplamwwM3ZyM3FuMG11aWJnbzl0In0.0U2ER5dreRX2sGB9VvMv7w'}\n                                onResult={(result) => {\n                                    this.setState({\n                                        result: result.result,\n                                        popupInfo: null\n                                    });\n                                }}\n                            />\n                            {this.state.data.map(this.getMarker)}\n                            {this.getPopup()}\n                            <div className=\"navigation-control\" style={{position: 'absolute', top: 0, left: 0, padding: '10px'}}>\n                                <NavigationControl onViewportChange={this.handleViewportChange} />\n                            </div>\n                        </ReactMapGL>\n                    </div>\n                }\n            </div>\n        );\n    };\n}\n\n\n\nexport default Maps;\n\n"]},"metadata":{},"sourceType":"module"}